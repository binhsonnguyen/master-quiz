@startuml
!define table(x) class x << (T,#FFAAAA) >>
!define pk(x) <u>x</u>
!define fk(x) <i><u>x</u></i>
hide methods
hide stereotypes
skinparam shadowing false

table(User) {
  pk(id)
  email <i>@NotNull</i>
  firstName
  midName
  lastName
  address
  phone
}

table(Group) {
  pk(id)
  name <i>@NotNull</i>
  descriptions
}

table(UserNameAndPasswordCredential) {
  pk(id)
  fk(userId)
  username <i>@NotNull</i>
  password <i>@NotNull</i>
}

table(Test) {
  pk(id)
  name <i>@NotNull</i>
  descriptions
}

table(TestQuestion) {
  pk(id)
  fk(testId)
  content <i>@NotNull</i>
  descriptions
  hint
  weight
  orderRelevance
}

table(TestQuestionOption) {
  pk(id)
  fk(testQuestionId)
  order
  content <i>@NotNull</i>
  descriptions
  isRight
}

table(Category) {
  pk(id)
  name <i>@NotNull</i>
  descriptions
}

table(Assignment) {
  pk(id)
  fk(testId)
  fk(groupId)
  name <i>@NotNull</i>
  descriptions
  startTime
  endTime
}

table(UserAssignment) {
  pk(id)
  fk(assignmentId)
  fk(userId)
  startTime
  finishTime
}

table(UserAssignmentAnswer) {
  pk(id)
  fk(testQuestionId)
}

table(UserAssignmentAnswerCheck) {
  pk(id)
  fk(userAssignmentAnswer)
  fk(testQuestionOption)
}

note right of TestQuestion: weight = trọng số (1, 2, 3, 4)
note top of TestQuestion: orderRelevance = có để ý đến order của option hay không

User }--{ Group
User <|--|> UserNameAndPasswordCredential
Test <|--{ TestQuestion
TestQuestion <|--{ TestQuestionOption
TestQuestion }--{ Category
Test <|--{ Assignment
Group <|--{ Assignment
User }--{ UserAssignment
Assignment <|--{ UserAssignment
UserAssignment <|--{ UserAssignmentAnswer
TestQuestion <|--{ UserAssignmentAnswer
UserAssignmentAnswer <|--{ UserAssignmentAnswerCheck
TestQuestionOption <|--{ UserAssignmentAnswerCheck

@enduml
